#pragma version 8
intcblock 0 1
bytecblock 0x 0x00
txn NumAppArgs
intc_0 // 0
==
bnz main_l4
txna ApplicationArgs 0
pushbytes 0xc77ee255 // "create_pool(pay,string,uint8,uint8)void"
==
bnz main_l3
err
main_l3:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createpoolcaster_3
intc_1 // 1
return
main_l4:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l6
err
main_l6:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// handle_create_pool
handlecreatepool_0:
proto 4 0
bytec_0 // ""
dupn 5
intc_0 // 0
dupn 4
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -4
extract 2 0
sha256
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
intc_0 // 0
frame_bury 6
intc_0 // 0
frame_bury 7
intc_0 // 0
frame_bury 8
frame_dig 0
frame_bury 12
frame_dig 12
frame_bury 11
pushint 38 // 38
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
pushint 65536 // 65536
<
assert
frame_dig 9
itob
extract 6 0
frame_dig -4
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig -3
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig -2
setbyte
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig -1
setbyte
concat
frame_dig 11
concat
frame_bury 1
frame_dig 6
itob
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_bury 2
frame_dig 1
frame_bury 20
frame_dig 20
frame_bury 19
pushint 26 // 26
frame_bury 17
frame_dig 17
itob
extract 6 0
frame_dig 2
concat
frame_dig 19
concat
frame_bury 5
frame_dig 0
extract 2 0
box_del
pop
frame_dig 0
extract 2 0
frame_dig 5
box_put
retsub

// pay_pool_creation_fee
paypoolcreationfee_1:
proto 1 0
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
pushint 200000 // 200000
==
assert
retsub

// create_pool
createpool_2:
proto 4 0
bytec_0 // ""
frame_dig -4
callsub paypoolcreationfee_1
frame_dig -4
gtxns Sender
frame_bury 0
frame_dig 0
len
pushint 32 // 32
==
assert
frame_dig -3
frame_dig 0
frame_dig -2
frame_dig -1
callsub handlecreatepool_0
intc_1 // 1
return

// create_pool_caster
createpoolcaster_3:
proto 0 0
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 2
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 3
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
callsub createpool_2
retsub