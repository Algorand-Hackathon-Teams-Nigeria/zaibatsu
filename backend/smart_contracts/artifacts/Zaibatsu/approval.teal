#pragma version 8
intcblock 0 1 32 94 65536
bytecblock 0x 0x00
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xb8864555 // "create_pool(pay,string,string,uint8,uint8)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0xd3d43644 // "lend_to_pool(axfer,string)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub lendtopoolcaster_3
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createpoolcaster_2
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// create_pool
createpool_0:
proto 5 0
bytec_0 // ""
frame_dig -5
callsub paypoolcreationfee_6
frame_dig -5
gtxns Sender
frame_bury 0
frame_dig 0
len
intc_2 // 32
==
assert
frame_dig -4
frame_dig -3
frame_dig 0
frame_dig -2
frame_dig -1
callsub handlecreatepool_4
intc_1 // 1
return

// lend_to_pool
lendtopool_1:
proto 2 0
frame_dig -2
frame_dig -1
callsub fundpool_5
retsub

// create_pool_caster
createpoolcaster_2:
proto 0 0
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 3
txna ApplicationArgs 4
intc_0 // 0
getbyte
frame_bury 4
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub createpool_0
retsub

// lend_to_pool_caster
lendtopoolcaster_3:
proto 0 0
intc_0 // 0
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 0
frame_dig 1
callsub lendtopool_1
retsub

// handle_create_pool
handlecreatepool_4:
proto 5 0
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig 0
frame_bury 0
frame_dig 1
frame_bury 1
intc_0 // 0
frame_bury 2
intc_0 // 0
frame_bury 3
intc_0 // 0
frame_bury 4
frame_dig 0
frame_dig 1
frame_bury 9
frame_dig 9
frame_bury 8
intc_3 // 94
frame_bury 6
frame_dig 6
frame_dig 9
len
+
frame_bury 7
frame_dig 7
intc 4 // 65536
<
assert
frame_dig 6
itob
extract 6 0
concat
frame_dig -4
frame_bury 9
frame_dig 8
frame_dig 9
concat
frame_bury 8
frame_dig 7
frame_bury 6
frame_dig 6
itob
extract 6 0
concat
frame_dig -3
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig -2
setbyte
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig -1
setbyte
concat
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 8
concat
frame_bury 5
frame_dig -5
extract 2 0
box_del
pop
frame_dig -5
extract 2 0
frame_dig 5
box_put
retsub

// fund_pool
fundpool_5:
proto 2 0
bytec_0 // ""
dupn 4
intc_0 // 0
dupn 6
bytec_0 // ""
dup
frame_dig -1
extract 2 0
box_get
store 1
store 0
load 1
assert
load 0
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
frame_dig 0
intc_2 // 32
extract_uint16
frame_dig 0
pushint 34 // 34
extract_uint16
substring3
frame_bury 2
frame_dig 0
frame_dig 0
pushint 34 // 34
extract_uint16
dig 1
len
substring3
frame_bury 3
frame_dig 0
extract 36 32
frame_bury 4
frame_dig 0
pushint 68 // 68
getbyte
frame_bury 5
frame_dig 0
pushint 69 // 69
getbyte
frame_bury 6
frame_dig 0
pushint 70 // 70
extract_uint64
frame_bury 7
frame_dig 0
pushint 78 // 78
extract_uint64
frame_bury 8
frame_dig 0
pushint 86 // 86
extract_uint64
frame_bury 9
frame_dig 7
frame_dig -2
gtxns AssetAmount
+
frame_bury 7
frame_dig 8
frame_dig -2
gtxns AssetAmount
+
frame_bury 8
frame_dig 1
frame_dig 2
frame_bury 13
frame_dig 13
frame_bury 12
intc_3 // 94
frame_bury 10
frame_dig 10
frame_dig 13
len
+
frame_bury 11
frame_dig 11
intc 4 // 65536
<
assert
frame_dig 10
itob
extract 6 0
concat
frame_dig 3
frame_bury 13
frame_dig 12
frame_dig 13
concat
frame_bury 12
frame_dig 11
frame_bury 10
frame_dig 10
itob
extract 6 0
concat
frame_dig 4
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 5
setbyte
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 6
setbyte
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 12
concat
frame_bury 0
frame_dig -1
extract 2 0
box_del
pop
frame_dig -1
extract 2 0
frame_dig 0
box_put
retsub

// pay_pool_creation_fee
paypoolcreationfee_6:
proto 1 0
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
pushint 200000 // 200000
==
assert
retsub